// Generated by CoffeeScript 1.10.0
var BrowserWindow, Menu, app, createWindow, dialog, electron, icon, nativeImage, path, url, win;

electron = require('electron');

path = require('path');

url = require('url');

app = electron.app, BrowserWindow = electron.BrowserWindow, Menu = electron.Menu, dialog = electron.dialog, nativeImage = electron.nativeImage;

win = null;

icon = nativeImage.createFromPath(path.join(__dirname, './img/air-e.png'));

createWindow = function() {
  var menu, mnutmpl;
  win = new BrowserWindow({
    width: 1000,
    height: 600,
    title: 'Air quaity',
    background: '#002b36',
    icon: './img/air-e.png'
  });
  win.loadFile('./views/home.html');
  win.maximize();
  if (process.argv[2] === '--dev') {
    win.webContents.openDevTools();
  }
  console.log(process.argv);
  mnutmpl = [
    {
      label: 'File',
      submenu: [
        {
          label: 'Quit',
          accelerator: 'Ctrl+Q',
          click: function() {
            return app.quit();
          }
        }
      ]
    }, {
      label: 'View',
      submenu: [
        {
          label: 'Latest measurements',
          click: function() {
            return win.loadFile('./views/home.html');
          }
        }, {
          type: 'separator'
        }, {
          label: 'Measurements for period',
          click: function() {
            return win.loadFile('./views/query.html');
          }
        }
      ]
    }, {
      label: 'About',
      click: function() {
        return dialog.showMessageBox(win, {
          type: 'info',
          title: 'About',
          message: 'About message...',
          detail: 'Details here...',
          buttons: ['ok']
        }, function(btn, chk) {
          return console.log(btn, chk);
        });
      }
    }
  ];
  menu = Menu.buildFromTemplate(mnutmpl);
  Menu.setApplicationMenu(menu);
  win.on('closed', function() {
    return win = null;
  });
  return null;
};

app.on('ready', function() {
  return createWindow();
});

app.on('activate', function() {
  if (win === null) {
    return createWindow();
  }
});

app.on('window-all-closed', function() {
  if (process.platform !== 'darwin') {
    return app.quit();
  }
});
