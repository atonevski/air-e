// Generated by CoffeeScript 1.10.0
var URL, http, toYMDHM, vue;

http = require('http');

URL = "http://air.moepp.gov.mk/graphs/site/pages/MakeGraph.php";

toYMDHM = function(d) {
  var dd;
  dd = (new Date(d - d.getTimezoneOffset() * 1000 * 60)).toISOString();
  return dd.slice(0, 10) + ' ' + dd.slice(11, 16);
};

vue = new Vue({
  el: '#app',
  data: {
    measurements: {},
    lang: {},
    fromDT: toYMDHM(new Date(new Date() - 24 * 60 * 60 * 1000)).slice(0, 14) + '00',
    toDT: toYMDHM(new Date()).slice(0, 14) + '00',
    parameter: 'PM10',
    parameters: [],
    station: 'SkopjeRegion',
    stations: []
  },
  methods: {
    getLangs: function() {
      var url;
      url = 'http://air.moepp.gov.mk/graphs/site/js/lang.mk.js';
      http.get(url, (function(_this) {
        return function(res) {
          var body;
          body = '';
          res.setEncoding('utf-8');
          res.on('data', function(d) {
            return body += d;
          });
          return res.on('end', function() {
            eval(body);
            return _this.lang.mk = lang;
          });
        };
      })(this));
      url = 'http://air.moepp.gov.mk/graphs/site/js/lang.en.js';
      return http.get(url, (function(_this) {
        return function(res) {
          var body;
          body = '';
          res.setEncoding('utf-8');
          res.on('data', function(d) {
            return body += d;
          });
          return res.on('end', function() {
            eval(body);
            _this.lang.en = lang;
            _this.parameters = Object.keys(lang.parameters);
            return _this.stations = Object.keys(lang.stations);
          });
        };
      })(this));
    },
    updateMeasurements: function() {
      var url;
      this.measurements = [];
      url = URL + '?' + ("parameter=" + this.parameter + "&") + ("station=" + this.station + "&") + ("beginDate=" + this.fromDT.slice(0, 10) + "&") + ("beginTime=" + this.fromDT.slice(11, 16) + "&") + ("endDate=" + this.toDT.slice(0, 10) + "&") + ("endTime=" + this.toDT.slice(11, 16) + "&") + ("i=" + ((new Date).getTime()) + "&") + "language=mk";
      return http.get(url, (function(_this) {
        return function(res) {
          var body;
          body = '';
          res.setEncoding('utf-8');
          res.on('data', function(d) {
            return body += d;
          });
          res.on('error', function(e) {
            return console.log("parameters error: " + e);
          });
          return res.on('end', function() {
            _this.measurements = JSON.parse(body);
            console.log(_this.measurements);
            return null;
          });
        };
      })(this));
    }
  },
  created: function() {
    return this.getLangs();
  }
});
